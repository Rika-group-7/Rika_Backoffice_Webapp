@page "/user/{UserId}"
@using Rika_Backoffice_Webapp.Models
@using Rika_Backoffice_Webapp.Services
@inject UserService _userService

<div class="container mt-5">
    <h2 class="mb-4">User Profile</h2>
    <div class="card p-4">
        <div class="form-group row">
            <label class="col-sm-3 col-form-label ">First Name:</label>
            <div class="col-sm-9">
                <p class="form-control-plaintext">@user.FirstName</p>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-3 col-form-label">Last Name:</label>
            <div class="col-sm-9">
                <p class="form-control-plaintext">@user.LastName</p>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-3 col-form-label">Email Address:</label>
            <div class="col-sm-9">
                <input type="email" class="form-control" @bind="user.Email" />
            </div>
        </div>
        <div class="text-right mt-3">
            <button class="btn btn-primary" @onclick="UpdateEmail">Save Changes</button>
        </div>
    </div>
</div>





@code {
    [Parameter]
    public string? UserId { get; set; }
    private UserModel user = new UserModel();

    protected override async Task OnInitializedAsync()
    {
        if(UserId != null)
        {
            user = await _userService.GetOneUserAsync(UserId);
        }

    }

    private async Task UpdateEmail()
    {
        if (UserId != null)
        {
            await _userService.UpdateUserAsync(UserId, user);
        }
    }


}
