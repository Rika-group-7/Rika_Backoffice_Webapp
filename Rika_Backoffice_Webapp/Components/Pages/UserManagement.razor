@page "/customers";
@using Rika_Backoffice_Webapp.Models
@using Rika_Backoffice_Webapp.Services
@using Blazorise
@using Blazorise.DataGrid

@rendermode InteractiveServer
@inject UserService _userService
@* @inject NotificationService _notificationService *@

<PageTitle>Customer Management</PageTitle>
<h3 class="text-center">Customer Management</h3>
<div class="row justify-content-center">
    
    @if (Users == null || !(Users.Count > 0))
    {
        <div class="col-auto mt-5">
            <div class="spinner-border text-primary" style="width: 6rem; height: 6rem;">
                <p class="visually-hidden">Loading...</p>
            </div>
        </div>
    }
    else
    {
        <div class="col col-md-8">
            <div class="card shadow-sm p-4">
                <DataGrid TItem="UserModel" Data="@Users" Sortable="true" Filterable="true" Responsive="true" Hoverable="true" ShowPager="true" PageSize="10" RowClicked="RowClicked" RowHoverCursor="@HoverCursor">
                    <DataGridColumns>
                        <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.FirstName)" Caption="First Name" Sortable="true" />
                        <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.LastName)" Caption="Last Name" Sortable="true" />
                        <DataGridColumn TItem="UserModel" Field="@nameof(UserModel.Email)" Caption="Email" Sortable="true" />
                    </DataGridColumns>
                </DataGrid>
            </div>
        </div>
    }
</div>

@code {

    private List<UserModel> Users = new List<UserModel>();

    protected override async Task OnInitializedAsync()
    {
        Users = await _userService.GetAllUserAsync();
    }

    private void RowClicked(DataGridRowMouseEventArgs<UserModel> e)
    {
        var userId = e.Item.Id;
        _navigationManager.NavigateTo($"/customers/{userId}");
    }

    private Cursor HoverCursor(UserModel user)
    {
        return Blazorise.Cursor.Pointer;
    }

}